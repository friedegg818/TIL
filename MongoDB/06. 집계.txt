■ Aggregation(집계) 와 group 함수
   ο Aggregation(집계)
     애그리게이션 기능은 사용자가 원하는 데이터 레코드를 집계 혹은 계산하여 보여주는 기능이다. 문서로 저장된 데이터 집합에서 원하는 데이터를 '검사' 및 '계산'하여 의미가 있는 정보를 뽑아낼 수 있다. 쿼리와 마찬가지로 애그리게이션은 컬렉션에 있는 문서들을 활용하여 한 개 이상의 문서 형태로 결과값을 만들어 낸다.

      http://www.tutorialspoint.com/mongodb/mongodb_aggregation.htm


     - Pipeline
       MongoDB 는 2.2 버전부터 aggregation 의 새로운 작동 원리인 'Pipeline'이라는 개념을 도입하였다. 문서들은 여러 개의  Pipeline 을 거치게 되고 이 과정을 통해 문서들은 애그리게이션 된 결과물들로 변환된다. 즉, Pipeline 이란 애그리게이션을 수행하기 위해 원래 있는 문서들을 선별(=필터링)하는 과정이라 생각할 수 있다.

       Pipeline은 Unix의 pipe와 동일하며, mongodb pipeline 은 document를 stream화 하고, pipeline operators는 document의 stream을 처리한다.

     - 형식
       > db.COLLECTION_NAME.aggregate(AGGREGATE_OPERATION)


   ο group 함수
     MongoDB는 SQL의 GROUP BY 표현식으로 하는 것과 같은 조치를 수행하는 데 필요한 group 함수를 제공한다. 예를 들면, 이름 값으로 그룹화된 문서의 수를 계수한다고 가정한다. SQL에서는 이 표현식을 다음과 같이 정의할 수 있다.
     
     SELECT name, COUNT(*) FROM colors GROUP BY name;

     MongoDB는 다음과 같이 표현 한다.

     > db.colors.group(
          {key: {name: true},
           cond: {},
           initial: {count: 0},                                  
           reduce: function(doc, out) { out.count++; }
       });

     리두스(reduce)는 비즈니스 펑션이며 condition는 조건절 이다.

     v2.2부터는 group으로 작업하지 않고 Pipeline Operation으로 하는 애그리게이션(aggregate)를 사용하거나 또는 mapreduce를 사용한다.

     - 형식 
     > db.dowonDB.mapreduce(map, reduce, out)
