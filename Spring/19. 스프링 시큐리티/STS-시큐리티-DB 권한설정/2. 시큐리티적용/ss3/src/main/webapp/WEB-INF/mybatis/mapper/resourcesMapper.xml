<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="resources">
	<!-- 리소스 패턴 -->
	<insert id="insertResources" parameterType="com.sp.security.authority.Resources">
		INSERT INTO secured_resources (resource_id, resource_name, resource_pattern,
				resource_type, description, sort_order, created_date, modify_date)
			VALUES (secured_resources_seq.NEXTVAL, #{resource_name}, #{resource_pattern},
				#{resource_type}, #{description, jdbcType=VARCHAR}, #{sort_order}, SYSDATE, SYSDATE)
	</insert>
	
	<select id="listResources" resultType="com.sp.security.authority.Resources">
		SELECT resource_id, resource_name, resource_pattern, resource_type, sort_order
		FROM secured_resources
		ORDER BY resource_id
	</select>

	<select id="dataCountResources1" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM secured_resources
	</select>	
	
	<select id="listResources1" parameterType="map" resultType="com.sp.security.authority.Resources">
		SELECT resource_id, resource_name, resource_pattern, resource_type, sort_order,
			TO_CHAR(created_date, 'YYYY-MM-DD') created_date
		FROM secured_resources
		ORDER BY resource_id
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>

	<select id="listResources2" parameterType="Integer" resultType="com.sp.security.authority.Resources">
		SELECT s.resource_id, resource_name, resource_pattern, resource_type, sort_order,
			description, created_date, modify_date, authority
		FROM secured_resources s
		LEFT OUTER JOIN secured_resources a ON s.resource_id = a.resource_id
		WHERE resource_id=#{resource_id}
	</select>

	<select id="readResources" parameterType="Integer" resultType="com.sp.security.authority.Resources">
		SELECT resource_id, resource_name, resource_pattern, resource_type, sort_order,
			description, created_date, modify_date
		FROM secured_resources
		WHERE resource_id=#{resource_id}
	</select>

	<update id="updateResources" parameterType="com.sp.security.authority.Resources">
		UPDATE secured_resources SET resource_name=#{resource_name}, resource_pattern=#{resource_pattern},
			resource_type=#{resource_type}, sort_order=#{sort_order},
			description=#{description, jdbcType=VARCHAR},
			modify_date=SYSDATE
		WHERE resource_id=#{resource_id}
	</update>
	
	<delete id="deleteResources" parameterType="Integer">
		DELETE FROM secured_resources WHERE resource_id=#{resource_id}
	</delete>
	
	<!-- 리소스에 대한 권한(롤) -->
	<insert id="insertResourcesRole" parameterType="com.sp.security.authority.Resources">
		INSERT INTO secured_resources_role (resource_id, authority)
			VALUES (#{resource_id}, #{authority})
	</insert>
	
	<select id="dataCountResourcesRole" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM secured_resources_role a
		JOIN secured_resources s ON  a.resource_id = s.resource_id
	</select>	
	
	<select id="listResourcesRole" parameterType="map" resultType="com.sp.security.authority.Resources">
		SELECT a.resource_id, authority, resource_name, resource_pattern,
			TO_CHAR(a.created_date, 'YYYY-MM-DD') created_date
		FROM secured_resources_role a
		JOIN secured_resources s ON  a.resource_id = s.resource_id
		ORDER BY a.resource_id
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="readResourcesRole" parameterType="map" resultType="com.sp.security.authority.Resources">
		SELECT a.resource_id, authority, resource_name, 
			a.created_date, a.modify_date
		FROM secured_resources_role a
		JOIN secured_resources s ON  a.resource_id = s.resource_id
		WHERE a.resource_id=#{resource_id} AND authority=#{authority}
	</select>
	
	<update id="updateResourcesRole" parameterType="com.sp.security.authority.Resources">
		UPDATE secured_resources_role SET authority=#{authority}, resource_id=#{resource_id},
			modify_date=SYSDATE
		WHERE resource_id=#{oldResource_id} AND authority=#{oldAuthority}
	</update>	
	
	<delete id="deleteResourcesRole" parameterType="map">
		DELETE FROM secured_resources_role WHERE resource_id=#{resource_id} AND authority=#{authority}
	</delete>
	
</mapper>