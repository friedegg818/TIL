<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="roles">
	<insert id="insertRoles" parameterType="com.sp.security.authority.Roles">
		INSERT INTO roles (authority, role_name, description, created_date, modify_date)
			VALUES (#{authority}, #{role_name}, #{description, jdbcType=VARCHAR}, SYSDATE, SYSDATE)
	</insert>
	
	<select id="dataCount" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM roles
	</select>	
	
	<select id="listRoles1" parameterType="map" resultType="com.sp.security.authority.Roles">
		SELECT authority, role_name, description,
			TO_CHAR(created_date, 'YYYY-MM-DD') created_date,
			TO_CHAR(modify_date, 'YYYY-MM-DD') modify_date
		FROM roles
		ORDER BY created_date
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="listRoles2" resultType="com.sp.security.authority.Roles">
		SELECT authority, role_name, description,
			TO_CHAR(created_date, 'YYYY-MM-DD') created_date, 
			TO_CHAR(modify_date, 'YYYY-MM-DD') modify_date
		FROM roles
		ORDER BY created_date
	</select>

	<select id="readRoles" parameterType="String" resultType="com.sp.security.authority.Roles">
		SELECT authority, role_name, description,
			created_date, modify_date
		FROM roles WHERE authority = #{authority}
	</select>
	
	<update id="updateRoles" parameterType="com.sp.security.authority.Roles">
		UPDATE roles SET authority=#{authority}, role_name=#{role_name},
			description=#{description, jdbcType=VARCHAR}, modify_date=SYSDATE
		WHERE authority=#{oldAuthority}
	</update>
	
	<delete id="deleteRoles" parameterType="String">
		DELETE FROM roles WHERE authority=#{authority}
	</delete>
</mapper>