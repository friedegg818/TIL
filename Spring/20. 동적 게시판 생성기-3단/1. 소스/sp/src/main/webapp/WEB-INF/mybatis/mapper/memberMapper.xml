<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	<!-- 회원정보 추가  -->    
	<select id="memberSeq" resultType="Long">
		SELECT member_seq.NEXTVAL FROM DUAL
	</select>
	
	<insert id="insertMember1" parameterType="com.sp.member.Member">
		INSERT INTO member1(memberIdx, membership)
			VALUES (#{memberIdx}, #{membership}) 
	</insert>

	<insert id="insertMember2" parameterType="com.sp.member.Member">
		INSERT INTO member2(memberIdx, userId, userName, userPwd, email, tel, birth, created_date, modify_date)
			VALUES (#{memberIdx}, #{userId}, #{userName}, #{userPwd}, #{email}, #{tel}, #{birth}, SYSDATE, SYSDATE)
	</insert>

	<!-- 회원 정보 가져오기 -->
	<select id="readMemberAll" parameterType="Long" resultType="com.sp.member.Member">
		SELECT m1.memberIdx, mr.membership, memberRole, userId, userName, userPwd, 
			created_date, modify_date, last_login,
			NVL(enabled, 1) enabled, email, tel, 
			TO_CHAR(birth, 'YYYY-MM-DD') birth
		FROM memberRole mr
		JOIN member1 m1 ON mr.membership = m1.membership 
		LEFT OUTER JOIN member2 m2 ON m1.memberIdx = m2.memberIdx
		WHERE memberIdx = #{memberIdx}
    </select>

	<select id="loginMember" parameterType="String" resultType="com.sp.member.Member">
		SELECT m1.memberIdx, membership, userId, userName, userPwd,
			NVL(enabled, 1) enabled
		FROM member1 m1
		JOIN member2 m2 ON m1.memberIdx = m2.memberIdx
		WHERE userId = #{userId} AND enabled = 1
	</select>

	<select id="readMember1" parameterType="Long" resultType="com.sp.member.Member">
		SELECT m1.memberIdx, membership, userId, userName, userPwd, 
			created_date, modify_date, last_login,
			NVL(enabled, 1) enabled, email, tel, 
			TO_CHAR(birth, 'YYYY-MM-DD') birth
		FROM member1 m1
		LEFT OUTER JOIN member2 m2 ON m1.memberIdx = m2.memberIdx
		WHERE memberIdx = #{memberIdx}
	</select>

	<select id="readMember2" parameterType="String" resultType="com.sp.member.Member">
		SELECT m1.memberIdx, membership, userId, userName, userPwd, 
			created_date, modify_date, last_login,
			NVL(enabled, 1) enabled, email, tel, 
			TO_CHAR(birth, 'YYYY-MM-DD') birth
		FROM member1 m1
		JOIN member2 m2 ON m1.memberIdx = m2.memberIdx
		WHERE userId = #{userId} 
	</select>

	<sql id="where-list">
		<choose>
			<when test="condition=='userId'">
				INSTR(m2.userId, #{keyword}) &gt;= 1
			</when>
			<otherwise>
				INSTR(${condition}, #{keyword}) &gt;= 1
			</otherwise>
		</choose>
	</sql>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT COUNT(*)
		FROM memberRole mr 
		JOIN member1 m1 ON mr.membership = m1.membership 
		LEFT OUTER JOIN member2 m2 ON m1.memberIdx = m2.memberIdx
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
			<if test="enabled!=''">
				AND enabled = #{enabled}
			</if>
			<if test="membership!=''">
				AND m1.membership = #{membership}
			</if>
			AND m1.membership &lt; #{loginMembership}
		</where> 
	</select>
    
	<select id="listMember" parameterType="map" resultType="com.sp.member.Member">
		SELECT m1.memberIdx, mr.membership, memberRole,
		       userId, userName, userPwd,
		       created_date, modify_date, last_login,
		       NVL(enabled, 1) enabled, email, tel,
		       TO_CHAR(birth, 'YYYY-MM-DD') birth
		FROM memberRole mr
		JOIN member1 m1 ON mr.membership = m1.membership
		LEFT OUTER JOIN member2 m2 ON m1.memberIdx = m2.memberIdx
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
			<if test="enabled!=''">
				AND enabled = #{enabled}
			</if>
			<if test="membership!=''">
				AND m1.membership = #{membership}
			</if>
			AND m1.membership &lt; #{loginMembership}
		</where> 
		ORDER BY created_date DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>

	<!-- 회원정보 수정  -->    
	<update id="updateMembership" parameterType="map">
		UPDATE member1 SET membership=#{membership}
		WHERE memberIdx=#{memberIdx}
	</update>
	
	<update id="updateMemberEnabled" parameterType="map">
		UPDATE member2 SET enabled=#{enabled}
		WHERE memberIdx=#{memberIdx}
	</update>
	
	<update id="updateMember2" parameterType="com.sp.member.Member">
		UPDATE member2 SET userPwd=#{userPwd}, 
			email=#{email}, tel=#{tel}, birth=#{birth},
			modify_date=SYSDATE 
		WHERE userId=#{userId}
	</update>
    
	<update id="updateLastLogin" parameterType="String">
		UPDATE member2 SET last_login=SYSDATE 
		WHERE userId=#{userId}
	</update>
    
	<!-- 회원 정보 삭제  -->    
	<delete id="deleteMember2" parameterType="String">
		DELETE FROM member2 WHERE userId=#{userId}
	</delete>
    
	<select id="listMemberRole" resultType="com.sp.member.Member">
		SELECT membership, memberRole
		FROM memberRole
		ORDER BY membership
	</select>
</mapper>