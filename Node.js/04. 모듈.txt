■ 모듈
 ο 내부 모듈
    Node.js는 기능을 확장하기 위해 모듈이라는 개념을 사용 한다. 모듈 중에 Node.js에 기본적으로 있는 모듈을 내부 모듈이라 한다.

    내부 모듈은 https://nodejs.org/api/ 에서 확인 할 수 있다.

   1) 모듈 사용 형식
      모듈은 리콰이어 메소드에 모듈명을 인자로 넘겨준다.
	  
      var 변수명 = require('모듈명');

   2) os 모듈
      os 모듈은 애플리케이션에서 많이 사용되는 모듈은 아니지만 운영체제와 시스템의 정보를 가져올 수 있는 모듈이다.
      os 모듈을 사용하려면 require('os')를 사용해야 한다.

    - os 모듈 추출
      > const os = require('os');

      // 속성 출력
      > console.log(os);

    - os 모듈 속성 및 메소드
      os.EOL : 운영체제의 개행문자(\n 또는 \r 등)
      os.arch()  : 운영체제의 아키텍처를 리턴
      os.constants
      os.cpus() : CPU의 정보를 담은 객체를 리턴
      os.endianness() : CPU의 endianness(BE 또는 LE)
      os.freemem() : 시스템의 사용 가능한 메모리를 리턴
      os.homedir()
      os.hostname() : 운영체제의 호스트 이름을 리턴
      os.loadavg() : 로드 에버리지 정보를 담은 배열을 리턴
      os.networkInterfaces() : 네트워크 인터페이스의 정보를 담은 객치를 리턴
      os.platform() : 운영체제의 플랫폼을 리턴
      os.release() : 운영체제의 버전을 리턴
      os.tmpdir() : 임시저장 폴더의 위치
      os.totalmem() : 시스템의 총 메모리를 리턴
      os.type() : 운영체제의 이름을 리턴
      os.uptime() : 운영체제가 실행된 시간을 리턴
      os.userInfo([options])

 
   3) url 모듈
       url 관련 한 모듈을 사용할 수 있다.
       url 모듈을 사용하려면 require('url')을 사용해야 한다.

    - url 모듈 추출
      > const url = require('url');

    - url 모듈 메소드
      url.parse(urlStr, [parseQueryString], [slashesDenoteHost]) : URL 문자열을 URL 객체로 변환해 리턴한다.
           parseQueryString
              true : url 객체의 query 속성을 객체 형식으로 가져온다.(querystring 모듈을 사용)
              false : url 객체의 query 속성을 문자열 형식으로 가져온다.
           slashesDenoteHost
              true : urlStr이 '//foo/bar' 인 경우 foo는 host, /bar는 path로 인식한다.
              false : urlStr이 '//foo/bar' 인 경우 //foo/bar 전체를 path로 인식하고 host는 null 이다.
      url.format(urlObj) : URL 객체를 URL 문자열로 변환해 리턴한다.
      url.resolve(from, to) : 매개변수를 조합하여 완전한 URL 문자열을 생성해 리턴한다.


   4) Query String 모듈
       URL객체의 쿼리와 관련된 모듈이다.

    - querystring 모듈 추출
      > const querystring = require('querystring');

    - querystring 모듈 메소드 및 속성
      querystring.stringify(obj, [sep], [eq]) : 쿼리 객체를 쿼리 문자열로 변환해 리턴한다.
           sep : separator로 기본값은 '&' 이다. 쿼리가 여러 개가 있을 때 쿼리와 쿼리 간의 구분자 역할을 한다.
           eq : assignment 역할을 하는 기호로 기본값은 '=' 이다.
      querystring.parse(str, [sep], [eq], [options]) : 쿼리 문자열을 쿼리 객체로 변환해 리턴한다.
      querystring.escape
      querystring.unescape


   5) util 모듈
       node.js의 보조적인 기능을 모아둔 모듈이다.

    - util 모듈 추출
      > var util = require('util');

    - util 모듈 메소드
      format() : 매개변수로 입력한 문자열을 조합해 리턴한다.
                     console.log() 메서드와의 차이점은 출력하지 않고 문자열을 반환하는 것이다.
                     형식 : util.format(format, [...])
                            %s - String.
                            %d - Number (both integer and float).
                            %j - JSON.
                             % - single percent sign ('%').


   6) crypto 모듈
       해시 생성과 암호화를 수행하는 모듈이다.
       해시는 다른 문자열이라도 같게 나올 수 있다. 따라서 해시를 원래 값으로 되돌리는 것은 불가능하다.

    - crypto 모듈 추출
      > var crypto = require('crypto');


   7) File System 모듈
       파일 처리에 관련된 모듈이다.

    - fs 모듈 추출
      var fs = require('fs');

    - fs 모듈 메소드
      readFile(file, encoding, callback) : 파일을 비동기적으로 읽는다.
      readFileSync(file, encoding) : 파일을 동기적으로 읽는다.
      writeFile(file, data, encoding, callback) : 파일을 비동기적으로 쓴다.
      writeFileSync(file, data, encoding) : 파일을 동기적으로 쓴다.

    (1) 파일 읽기
      ① readFileSync()
        매개변수에 파일 경로와 인코딩 방식을 지정한다.

      ② readFile()
        readFileSync() 메소드를 비동기적으로 구현한 메소드이다.
        readFile() 메소드를 만나는 순간 이벤트 리스너를 등록하고 파일을 모두 읽으면 이벤트 리스너를 실행한다.
        파일을 정상적으로 읽으면 콜백 함수의 두 번째 매개변수에 읽은 데이터를 전달한다.

    (2) 파일 쓰기
      - writeFile() 메소드와 writeFileSync() 메소드

    (3) 예외 처리
      존재하지 않는 파일을 읽을 경우 프로그램은 예외가 발생해서 곧바로 종료된다. 또한 파일을 쓸 수 없는 위치에 파일을 저장하는 경우에도 예외가 발생해 곧바로 프로그램이 종료된다.
      따라서 예외 처리를 하여 프로그램이 비정상적으로 종료되지 않도록 한다.


 ο 외부 모듈
    Node.js가 기본적으로 갖고 있지 않고 개인 또는 단체가 배포하는 모듈을 외부 모듈이라고 한다.

    외부 모듈은
       https://www.npmjs.com/
       https://www.npmjs.com/package
       에서 확인 할 수 있다.

   1) 외부 모듈 설치
      cmd> npm install 모듈명

   2) request 모듈 설치
       request 모듈은 특정 웹사이트를 긁을 때 사용 한다.

      - 설치(js 파일을 저장하고 node.js를 실행할 경로에 설치)
         c:\nodejs>npm install request

         c:\nodejs\node_modules 폴더에 설치가 됨

